FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    make

# Copy wrapguard source
WORKDIR /build
COPY wrapguard-src/ ./

# Build wrapguard
RUN make build

FROM node:20-alpine

# Install runtime dependencies
RUN apk add --no-cache \
    libc6-compat \
    bash \
    curl

# Create app directory
WORKDIR /app

# Copy wrapguard binary and library from builder
COPY --from=builder /build/wrapguard /usr/local/bin/wrapguard
COPY --from=builder /build/libwrapguard.so /usr/local/bin/libwrapguard.so

# Make wrapguard executable
RUN chmod +x /usr/local/bin/wrapguard

# Copy the Node.js application
COPY node-server-*.js ./

# Expose the application ports
EXPOSE 8001 8002

# The CMD will be overridden in docker-compose.yml for each service